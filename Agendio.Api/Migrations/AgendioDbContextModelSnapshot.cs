// <auto-generated />
using System;
using AGENDIO.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Agendio.Api.Migrations
{
    [DbContext(typeof(AgendioDbContext))]
    partial class AgendioDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AGENDIO.API.Models.Cliente", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("BusinessId")
                        .HasColumnType("uuid");

                    b.Property<string>("Email_cliente")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nome_Cliente")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Tel_cliente")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("BusinessId");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("AGENDIO.API.Models.Dono", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("DonoId")
                        .HasColumnType("uuid");

                    b.Property<string>("Email_Dono")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nome_Dono")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Senha_Dono")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Tel_Dono")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("DonoId");

                    b.ToTable("Donos");
                });

            modelBuilder.Entity("AGENDIO.API.Models.Funcionario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("BusinessId")
                        .HasColumnType("uuid");

                    b.Property<string>("Email_Func")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Espec_Func")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nome_Func")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Senha_Func")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Tel_Func")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("BusinessId");

                    b.ToTable("Funcionarios");
                });

            modelBuilder.Entity("AGENDIO.API.Models.Marcacao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClienteId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("FuncionarioId")
                        .HasColumnType("uuid");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("FuncionarioId");

                    b.ToTable("Marcacoes");
                });

            modelBuilder.Entity("AGENDIO.API.Models.Negocio", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Desc_Negocio")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("End_negocio")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nome_Negocio")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Tel_Negocio")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Negocios");
                });

            modelBuilder.Entity("AGENDIO.API.Models.Servicos", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("BusinessId")
                        .HasColumnType("uuid");

                    b.Property<int>("Duracao_Serv")
                        .HasColumnType("integer");

                    b.Property<string>("Nome_Serv")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Preco_Serv")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("BusinessId");

                    b.ToTable("Servicos");
                });

            modelBuilder.Entity("AGENDIO.API.Models.Cliente", b =>
                {
                    b.HasOne("AGENDIO.API.Models.Negocio", "Business")
                        .WithMany("Clients")
                        .HasForeignKey("BusinessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Business");
                });

            modelBuilder.Entity("AGENDIO.API.Models.Dono", b =>
                {
                    b.HasOne("AGENDIO.API.Models.Dono", null)
                        .WithMany("Owner")
                        .HasForeignKey("DonoId");
                });

            modelBuilder.Entity("AGENDIO.API.Models.Funcionario", b =>
                {
                    b.HasOne("AGENDIO.API.Models.Negocio", "Business")
                        .WithMany("Employees")
                        .HasForeignKey("BusinessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Business");
                });

            modelBuilder.Entity("AGENDIO.API.Models.Marcacao", b =>
                {
                    b.HasOne("AGENDIO.API.Models.Cliente", null)
                        .WithMany("Appointments")
                        .HasForeignKey("ClienteId");

                    b.HasOne("AGENDIO.API.Models.Funcionario", null)
                        .WithMany("Appointments")
                        .HasForeignKey("FuncionarioId");
                });

            modelBuilder.Entity("AGENDIO.API.Models.Servicos", b =>
                {
                    b.HasOne("AGENDIO.API.Models.Negocio", "Business")
                        .WithMany("Services")
                        .HasForeignKey("BusinessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Business");
                });

            modelBuilder.Entity("AGENDIO.API.Models.Cliente", b =>
                {
                    b.Navigation("Appointments");
                });

            modelBuilder.Entity("AGENDIO.API.Models.Dono", b =>
                {
                    b.Navigation("Owner");
                });

            modelBuilder.Entity("AGENDIO.API.Models.Funcionario", b =>
                {
                    b.Navigation("Appointments");
                });

            modelBuilder.Entity("AGENDIO.API.Models.Negocio", b =>
                {
                    b.Navigation("Clients");

                    b.Navigation("Employees");

                    b.Navigation("Services");
                });
#pragma warning restore 612, 618
        }
    }
}
